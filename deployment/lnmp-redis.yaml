apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis
  labels:
    app: lnmp
    tier: redis
spec:
  selector:
    app: lnmp
    tier: redis
  ports:
  - port: 6379
    # targetPort: 6379
  clusterIP: None
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: lnmp-redis-data
  labels:
    app: lnmp
    tier: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  namespace: default
  name: redis
  labels:
    app: lnmp
    tier: redis
spec:
  selector:
    matchLabels:
      app: lnmp
      tier: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: lnmp
        tier: redis
    spec:
      containers:
      - name: lnmp-redis
        image: redis:5.0-rc4-alpine
        args:
        - redis-server
        - /redis.conf
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TZ
              name: lnmp-env
        volumeMounts:
        - name: lnmp-redis-data
          mountPath: /data
        - name: lnmp-redis-conf
          mountPath: /redis.conf
          subPath: redis.conf
        ports:
        - containerPort: 6379
      restartPolicy: Always
      volumes:
      - name: lnmp-redis-data
        persistentVolumeClaim:
          claimName: lnmp-redis-data

      # 将 configMap 挂载为文件
      - name: lnmp-redis-conf
        configMap:
          name: lnmp-redis-conf
          items:
          - key: redis.conf
            path: redis.conf
status: {}
