language: bash

services:
- docker

dist: xenial

cache:
  directories:
    - kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin

before_install:
  # 升级最新 Docker Compose
  # - docker-compose --version
  # - sudo rm /usr/local/bin/docker-compose
  # - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION:-1.24.0}/docker-compose-`uname -s`-`uname -m` > docker-compose
  # - chmod +x docker-compose
  # - sudo mv docker-compose /usr/local/bin
  - docker-compose --version
  - docker --version
  - sudo cat /etc/docker/daemon.json
  - sudo rm -rf /etc/docker/daemon.json
  - ip addr
  - hostnamectl
  - SERVER_IP=`ifconfig ens4 | grep "inet" | awk '{ print $2}' | cut -d ':' -f 2`
  - ./lnmp-k8s > /dev/null
  - echo $SERVER_IP

install:
  - sed -i "s!192.168.199.100!${SERVER_IP}!g" systemd/.env
  - sudo hostnamectl set-hostname node1
  - echo "${SERVER_IP} node1" | sudo tee -a /etc/hosts
  - docker-compose up cfssl-single
  # - source .env
  - ls kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/kubectl || rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64
  - ./lnmp-k8s single-install ${LNMP_K8S_SINGLE_INSTALL_OPTIONS:-}
  - export PATH=$PATH:/opt/bin/k8s
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/*.tar
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/*.docker_tag
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/apiextensions-apiserver
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/cloud-controller-manager
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/hyperkube
  - rm -rf kubernetes-release/release/v${CI_KUBERNETES_VERSION}-linux-amd64/kubernetes/server/bin/mounter

before_script:
  - sudo systemctl cat etcd
  - sudo systemctl start etcd

  - sudo systemctl cat flanneld
  - sudo systemctl start flanneld

  - test "${LNMP_K8S_SINGLE_INSTALL_OPTIONS}" = "--containerd" && (sudo cp systemd/containerd.service.back /etc/systemd/system/ ; sudo systemctl daemon-reload ; sudo systemctl start containerd) || (sudo systemctl cat docker ; sudo systemctl restart docker || sudo journalctl -u docker)

  - sudo systemctl cat kube-apiserver
  - sudo systemctl start kube-apiserver

  - sudo systemctl cat kube-controller-manager
  - sudo systemctl start kube-controller-manager

  - sudo systemctl cat kube-scheduler
  - sudo systemctl start kube-scheduler

  - sudo systemctl cat kube-proxy
  - sudo systemctl start kube-proxy

  - sleep 10
  - sudo systemctl cat kubelet
  - sudo systemctl start kubelet

  - sleep 20

  # - sudo systemctl status etcd
  # - sudo systemctl status flanneld
  # - sudo systemctl status docker
  # - sudo systemctl status kube-apiserver
  # - sudo systemctl status kube-controller-manager
  # - sudo systemctl status kube-scheduler
  # - sudo systemctl status kube-proxy
  # - sudo systemctl status kubelet

  - kubectl version
  - kubectl cluster-info

  - sleep 30

  - sudo journalctl -u kubelet
  - sudo journalctl -u kube-apiserver
  - sudo journalctl -u kube-controller-manager
  - sudo journalctl -u kube-scheduler
  - sudo journalctl -u kube-proxy

  - kubectl get csr
  - CSR_NAME=`kubectl get csr | grep system:node:node1 | awk '{print $1}' | head -1`
  - echo ${CSR_NAME}
  - kubectl certificate approve $CSR_NAME
  - kubectl get csr
  - kubectl get node
  - kubectl get all --all-namespaces
  - kubectl api-versions
  - kubectl api-resources

script:
  - kubectl apply -f addons/coredns.yaml
  - kubectl apply -f addons/dashboard.yaml
  - kubectl apply -f addons/metrics-server
  - kubectl apply -f addons/ingress-nginx/mandatory.yaml
  - kubectl apply -f addons/ingress-nginx/provider/baremetal/service-nodeport.yaml

  - sleep 120

  - kubectl get all --all-namespaces
  # test metrics server
  - kubectl top node
  # test dns
  - kubectl run nginx --image nginx:1.17.2-alpine
  - sleep 20
  - POD_NAME=`kubectl get pod | awk '{print $1}' | tail -1`
  - kubectl exec ${POD_NAME} -- cat /etc/resolv.conf || true
  - kubectl exec ${POD_NAME} -- ping -c 5 kubernetes || true
  - kubectl exec ${POD_NAME} -- ping -c 5 baidu.com || true
  - kubectl delete pod ${POD_NAME}
  # test ingress-nginx
  - HTTP_PORT=`kubectl get service -n ingress-nginx | grep ingress-nginx | awk '{print $5}' | cut -d ':' -f 2 | cut -d / -f 1`
  - curl ${SERVER_IP}:${HTTP_PORT}

after_success:
  - echo "Set app"
  - mkdir -p ../app/laravel/public
  - cp deployment/app/index.php ../app/laravel/public/
  # - mkdir -p ../app
  # - docker run -it --rm -v $PWD/helm/nginx-php/config/php/composer/config.testing.json:/tmp/config.json -v $PWD/../app:/app khs1994/php:7.3.8-composer-alpine composer global config --unset repos.packagist
  # - docker run -it --rm -v $PWD/helm/nginx-php/config/php/composer/config.testing.json:/tmp/config.json -v $PWD/../app:/app khs1994/php:7.3.8-composer-alpine composer create-project --prefer-dist laravel/laravel=5.8.* laravel
  - echo "Up nfs server"
  - ./lnmp-k8s nfs
  - sleep 10
  - docker ps -a
  - ./lnmp-k8s nfs logs
  - sudo mkdir -p /tmp2
  - sudo apt install -y nfs-common
  - sudo mount -t nfs4 ${SERVER_IP}:/lnmp/log /tmp2
  - sudo umount /tmp2
  - sed -i "s#192.168.199.100#${SERVER_IP}#g" deployment/pv/lnmp-volume.linux.nfs.yaml
  - ./lnmp-k8s create
  - echo "${SERVER_IP} laravel2.t.khs1994.com" | sudo tee -a /etc/hosts
  - ping -c 1 laravel2.t.khs1994.com
  - sleep 70
  - kubectl get -n lnmp all
  - curl -k https://laravel2.t.khs1994.com
  - ./lnmp-k8s delete
  - ./lnmp-k8s cleanup
  - ./lnmp-k8s nfs down
  - echo "Test noNFS volume"
  - cp -rf ../app ~/app
  - ./lnmp-k8s create --no-nfs
  - sleep 50
  - kubectl get -n lnmp all
  - curl -k https://laravel2.t.khs1994.com

env:
  matrix:
    - CI_KUBERNETES_VERSION=1.14.2
    - CI_KUBERNETES_VERSION=1.15.0
    - CI_KUBERNETES_VERSION=1.16.0-alpha.1
    - CI_KUBERNETES_VERSION=1.16.0-alpha.1 LNMP_K8S_SINGLE_INSTALL_OPTIONS="--containerd"
  global:
    - k=v
