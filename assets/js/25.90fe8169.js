(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{191:function(t,r,e){"use strict";e.r(r);var a=e(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端口","aria-hidden":"true"}},[t._v("#")]),t._v(" 端口")]),t._v(" "),e("h2",{attrs:{id:"nodeport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodeport","aria-hidden":"true"}},[t._v("#")]),t._v(" nodePort")]),t._v(" "),e("p",[t._v("外部机器可访问的端口，节点的端口。")]),t._v(" "),e("h2",{attrs:{id:"targetport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#targetport","aria-hidden":"true"}},[t._v("#")]),t._v(" targetPort")]),t._v(" "),e("p",[t._v("容器的端口（最根本的端口入口），与制作容器时暴露的端口一致（ DockerFile 中 "),e("strong",[t._v("EXPOSE")]),t._v(" )")]),t._v(" "),e("h2",{attrs:{id:"port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#port","aria-hidden":"true"}},[t._v("#")]),t._v(" port")]),t._v(" "),e("p",[t._v("Kubernetes 中的 "),e("strong",[t._v("服务之间")]),t._v(" 访问的端口,尽管 MySQL 容器暴露了 3306 端口,但是集群内其他容器需要通过 33306 端口访问该服务，外部机器不能访问mysql服务，因为他没有配置NodePort类型")])])}],!1,null,null,null);r.default=s.exports}}]);