(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{173:function(s,a,t){"use strict";t.r(a);var e=t(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"dashboard-插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dashboard-插件","aria-hidden":"true"}},[s._v("#")]),s._v(" dashboard 插件")]),s._v(" "),t("ul",[t("li",[s._v("https://github.com/kubernetes/dashboard/tree/v1.10.1/src/deploy/recommended")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl apply -k addons/dashboard\n\n$ kubectl get deployment kubernetes-dashboard  -n kube-system\n\n$ kubectl --namespace kube-system get pods -o wide\n\n$ kubectl get services kubernetes-dashboard -n kube-system\n")])])]),t("h2",{attrs:{id:"通过-kubectl-proxy-访问-dashboard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过-kubectl-proxy-访问-dashboard","aria-hidden":"true"}},[s._v("#")]),s._v(" 通过 kubectl proxy 访问 dashboard")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl proxy --address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),s._v(" --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("8086 --accept-hosts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^*$'")]),s._v("\nStarting to serve on 127.0.0.1:8086\n")])])]),t("p",[s._v("http://127.0.0.1:8086/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy")]),s._v(" "),t("h2",{attrs:{id:"创建登录-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建登录-token","aria-hidden":"true"}},[s._v("#")]),s._v(" 创建登录 token")]),s._v(" "),t("h3",{attrs:{id:"docker-桌面版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-桌面版","aria-hidden":"true"}},[s._v("#")]),s._v(" Docker 桌面版")]),s._v(" "),t("ul",[t("li",[s._v("https://github.com/AliyunContainerService/k8s-for-docker-desktop")])]),s._v(" "),t("h4",{attrs:{id:"macos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#macos","aria-hidden":"true"}},[s._v("#")]),s._v(" macOS")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ TOKEN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl -n kube-system describe secret default"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('=="token:"{print '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n$ kubectl config set-credentials docker-desktop --token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TOKEN}")]),s._v('"')]),s._v("\n")])])]),t("h4",{attrs:{id:"windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows","aria-hidden":"true"}},[s._v("#")]),s._v(" Windows")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TOKEN")]),s._v("="),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kubectl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n kube"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("system describe secret default "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Select-String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"token:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("split "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" +"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n$ kubectl config "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("credentials docker"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("desktop "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("token="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TOKEN}"')]),s._v("\n")])])]),t("p",[t("strong",[s._v("登录 dashboard 的时候选择 kubeconfig 文件")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("macOS")]),s._v(" "),t("code",[s._v("$HOME/.kube/config")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Windows")]),s._v(" "),t("code",[s._v("%UserProfile%\\.kube\\config")])])])]),s._v(" "),t("h3",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux","aria-hidden":"true"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl create sa dashboard-admin -n kube-system\n\n$ kubectl create clusterrolebinding dashboard-admin --clusterrole"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cluster-admin --serviceaccount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kube-system:dashboard-admin\n\n$ ADMIN_SECRET"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl get secrets -n kube-system "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" dashboard-admin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dashboard-admin-token-nzlbv")]),s._v("\n\n$ DASHBOARD_LOGIN_TOKEN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl describe secret -n kube-system $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ADMIN_SECRET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^token'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DASHBOARD_LOGIN_TOKEN}")]),s._v("\n")])])]),t("h2",{attrs:{id:"创建使用-token-的-kubeconfig-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建使用-token-的-kubeconfig-文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 创建使用 token 的 KubeConfig 文件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置集群参数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker desktop k8s")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $ export KUBE_APISERVER=https://localhost:6445")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $ export K8S_ROOT=/opt/k8s")]),s._v("\n\n$ kubectl config set-cluster kubernetes \\\n  --certificate-authority"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${K8S_ROOT:-/opt/k8s}")]),s._v("/certs/ca.pem \\\n  --embed-certs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true \\\n  --server"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${KUBE_APISERVER:-https://192.168.57.110:6443}")]),s._v(" \\\n  --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOME")]),s._v("/.kube/dashboard.kubeconfig\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置客户端认证参数，使用上面创建的 Token")]),s._v("\n$ kubectl config set-credentials dashboard_user \\\n  --token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DASHBOARD_LOGIN_TOKEN}")]),s._v(" \\\n  --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOME")]),s._v("/.kube/dashboard.kubeconfig\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置上下文参数")]),s._v("\n$ kubectl config set-context default \\\n  --cluster"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes \\\n  --user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dashboard_user \\\n  --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOME")]),s._v("/.kube/dashboard.kubeconfig\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置默认上下文")]),s._v("\n$ kubectl config use-context default --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOME")]),s._v("/.kube/dashboard.kubeconfig\n")])])])])}],!1,null,null,null);a.default=r.exports}}]);